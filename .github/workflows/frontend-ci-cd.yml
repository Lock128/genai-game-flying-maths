name: Frontend CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable
        flutter-version: 3.19.0
    - run: flutter --version
    - name: Install dependencies
      run: cd frontend && flutter pub get
    - name: Run tests
      run: cd frontend && flutter test
    - name: Build web
      run: cd frontend && flutter build web
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install CDK
      run: npm install -g aws-cdk
    - name: Deploy Frontend Stack
      run: |
        cd frontend
        cd cdk
        npm ci
        aws configure list
        npm run cdk -- deploy FlyingMathsFrontendStack --require-approval never
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
    - name: Get S3 bucket name
      id: get_bucket
      run: |
        BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name FlyingMathsFrontendStack --query 'Stacks[0].Outputs[?OutputKey==`WebsiteBucketName`].OutputValue' --output text)
        DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name FlyingMathsFrontendStack --query 'Stacks[0].Outputs[?OutputKey==`DistributionId`].OutputValue' --output text)
        echo "BUCKET_NAME=${BUCKET_NAME}" >> $GITHUB_OUTPUT
        echo "DISTRIBUTION_ID=${DISTRIBUTION_ID}" >> $GITHUB_OUTPUT
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
    - name: Deploy to S3
      run: |
        aws s3 sync frontend/build/web s3://${{ steps.get_bucket.outputs.BUCKET_NAME }} --delete
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ steps.get_bucket.outputs.DISTRIBUTION_ID }} --paths "/*"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
        AWS_REGION: ${{ secrets.AWS_REGION }}